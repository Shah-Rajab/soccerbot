<?xml version='1.0'?>
<robot name="omnibot" xmlns:xacro="http://www.ros.org/wiki/xacro">



<!-- Joint to keep the robot up in midair -->
     <link name="world" />
      <joint name="world_base_link" type="fixed">
        <parent link="world"/>
        <child link="base_link"/>
        <origin rpy="0  0 0" xyz="0 0 0"/>
        <axis xyz="1  0  0"/>
      </joint>

      <!--static>false</static-->
   <link name="base_link" />
   <link name="body">
	<origin rpy="0 0 0" xyz="0 0 0"/>
        <visual name="visual">
          <geometry>      
	   <mesh filename="package://omnibot_description/meshes/bodycentre2v6.stl" scale="0.001 0.001 0.001"/>
	</geometry>
        </visual>
   	<collision name='collision'>
            <geometry>
              <mesh filename="package://omnibot_description/meshes/bodycentre2v6.stl" scale="0.001 0.001 0.001"/>
            </geometry>
          </collision>
      </link>

  <link name="left_front_wheel">
      <!--origin rpy="0 0 0.785398" xyz="-0.15 -0.15 0.5"/-->
	<collision name="collision">
          <geometry>
	     <mesh filename="package://omnibot_description/meshes/wheelCentrev1.stl" scale="0.001 0.001 0.001"/>
          </geometry>
        </collision>
        <visual name="visual">
	  <origin rpy="0 0 0.785398" xyz="-0.15 -0.15 0"/>
          <geometry>
           <mesh filename="package://omnibot_description/meshes/wheelCentrev1.stl" scale="0.001 0.001 0.001"/>    
	</geometry>
        </visual>
    </link>

  <link name="left_back_wheel">
      <!--origin rpy="0 0 2.35619" xyz="0.15 -0.15 0.5"/-->
	<collision name="collision">
          <geometry>
             <mesh filename="package://omnibot_description/meshes/wheelCentrev1.stl" scale="0.001 0.001 0.001"/>   
          </geometry>
        </collision>
        <visual name="visual">
	<origin rpy="0 0 2.35619" xyz="0.15 -0.15 0"/>
          <geometry>
             <mesh filename="package://omnibot_description/meshes/wheelCentrev1.stl" scale="0.001 0.001 0.001"/>      
	</geometry>
        </visual>
  </link>

  <link name="right_front_wheel">
      <!--origin rpy="0 0 3.92699" xyz="0.15 0.15 0.5"/-->
	<collision name="collision">
          <geometry>
             <mesh filename="package://omnibot_description/meshes/wheelCentrev1.stl" scale="0.001 0.001 0.001"/>    
          </geometry>
        </collision>
        <visual name="visual">
	<origin rpy="0 0 3.92699" xyz="0.15 0.15 0"/>
          <geometry>
             <mesh filename="package://omnibot_description/meshes/wheelCentrev1.stl" scale="0.001 0.001 0.001"/>     
	</geometry>
        </visual>
     </link>

  <link name="right_back_wheel">
      <!--origin rpy="0 0 5.49779" xyz="-0.15 0.15 0.5"/-->
	<collision name="collision">
          <geometry>
             <mesh filename="package://omnibot_description/meshes/wheelCentrev1.stl" scale="0.001 0.001 0.001"/>  
          </geometry>
        </collision>
        <visual name="visual">
	<origin rpy="0 0 5.49779" xyz="-0.15 0.15 0"/>
          <geometry>
             <mesh filename="package://omnibot_description/meshes/wheelCentrev1.stl" scale="0.001 0.001 0.001"/>     
	</geometry>
        </visual>
      </link>

<!--link name="camera_link">
      <pose>0 0 0.93 0 0 0</pose>
	<inertial>
        <mass value = "0.1"/>
        <inertia ixx = "0.000166667" iyy = "0.000166667" izz = "0.000166667"/>
      </inertial>
      <collision name="collision">
        <geometry>
          <box size = "0.03 0.03 0.03"/>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <box size = "0.03 0.03 0.03"/>
        </geometry>
      </visual-->

      <!--sensor name="camera1" type="camera">
	<always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>true</visualize>
        <camera>
         <horizontal_fov>1.3962634</horizontal_fov>
         <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
         </image>
         <clip>
          <near>0.02</near>
          <far>300</far>
         </clip>
         <noise>
          <type>gaussian</type-->
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <!--mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>omnibot/camera1</cameraName>
        <imageTopicName>omnibot/camera1/image_raw</imageTopicName>
        <cameraInfoTopicName>omnibot/camera1/camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor-->
     <!--/link-->

	<joint name="base_link_body" type="fixed">
        <parent link="base_link"/>
        <child link="body"/>
	<origin rpy="0  0 0" xyz="0 0 0"/>
        <axis xyz="1 0 0"/>
    	</joint>


	<joint type="revolute" name="left_front_wheel_hinge">
        <child link = "left_front_wheel"/>
        <parent link = "body"/>
	<origin rpy="0  0 0" xyz="0 0 0"/>
        <axis xyz = "1 0 0"/>
	<limit effort="0" lower="0" upper="0" velocity="0"/>
      	</joint>

      <joint type="revolute" name="right_front_wheel_hinge">
        <child link = "right_front_wheel"/>
        <parent link = "body"/>
	<origin rpy="0  0 0" xyz="0 0 0"/>
        <axis xyz = "1 0 0"/>
	<limit effort="0" lower="0" upper="0" velocity="0"/>
      	</joint>

      <joint type="revolute" name="left_back_wheel_hinge">
        <child link = "left_back_wheel"/>
        <parent link = "body"/>
	<origin rpy="0  0 0" xyz="0 0 0"/>
        <axis xyz = "1 0 0"/>
	<limit effort="0" lower="0" upper="0" velocity="0"/>
      	</joint>

      <joint type="revolute" name="right_back_wheel_hinge">
        <child link = "right_back_wheel"/>
        <parent link = "body"/>
	<origin rpy="0  0 0" xyz="0 0 0"/>
        <axis xyz = "1 0 0"/>
	<limit effort="0" lower="0" upper="0" velocity="0"/>
      	</joint>

	<!--joint name="camera_joint" type="fixed">
    		<parent>body</parent>
    		<child>camera_link</child>
		<limit effort="0" lower="0" upper="0" velocity="0"/>
  	</joint-->
    </robot>

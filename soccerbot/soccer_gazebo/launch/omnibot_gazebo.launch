<launch>
    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="true"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <arg name="field" default="robocup"/>

    <env name="GAZEBO_MODEL_PATH" value="$(find soccer_description)"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find soccer_gazebo)/worlds/$(arg field).world"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description"
           command="$(find xacro)/xacro --inorder '$(find omnibot_description)/models/model.xacro'"/>

    <node name="spawn_soccerbot_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model omnibot -param robot_description -z 0.05"/>

    <!-- ros_control soccerbot launch file -->
    <include file="$(find omnibot_control)/launch/omnibot_control.launch"/>

    <!-- Converts SoccerGoal to Gazebo simulation -->
    <node name="robotGoalToGazebo" pkg="soccer_transforms" type="draw_trajectories"/>

</launch>
